var _moarwick$elm_webpack_starter$Main$styles = {
	body: _elm_lang$core$Native_List.fromArray(
		[
			{ctor: '_Tuple2', _0: 'background-color', _1: 'auto !important'}
		]),
	img: _elm_lang$core$Native_List.fromArray(
		[
			{ctor: '_Tuple2', _0: 'width', _1: '33%'},
			{ctor: '_Tuple2', _0: 'border', _1: '4px solid #337AB7'}
		])
};
var _moarwick$elm_webpack_starter$Main$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		_elm_lang$core$Native_List.fromArray(
			[
				_elm_lang$html$Html_Attributes$class('container'),
				_elm_lang$html$Html_Attributes$style(
				_elm_lang$core$Native_List.fromArray(
					[
						{ctor: '_Tuple2', _0: 'margin-top', _1: '30px'},
						{ctor: '_Tuple2', _0: 'text-align', _1: 'center'},
						{ctor: '_Tuple2', _0: 'background-color', _1: 'auto'}
					]))
			]),
		_elm_lang$core$Native_List.fromArray(
			[
				A2(
				_elm_lang$html$Html$div,
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html_Attributes$class('row')
					]),
				_elm_lang$core$Native_List.fromArray(
					[
						A2(
						_elm_lang$html$Html$div,
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html_Attributes$class('col-xs-8')
							]),
						_elm_lang$core$Native_List.fromArray(
							[
								A2(
								_elm_lang$html$Html$div,
								_elm_lang$core$Native_List.fromArray(
									[
										_elm_lang$html$Html_Attributes$class('box effect5')
									]),
								_elm_lang$core$Native_List.fromArray(
									[
										_elm_lang$html$Html$text(model.speech)
									])),
								A2(
								_elm_lang$html$Html$div,
								_elm_lang$core$Native_List.fromArray(
									[]),
								_elm_lang$core$Native_List.fromArray(
									[
										A2(
										_elm_lang$html$Html$a,
										_elm_lang$core$Native_List.fromArray(
											[
												_elm_lang$html$Html_Attributes$class('button button-circle button-flat-caution')
											]),
										_elm_lang$core$Native_List.fromArray(
											[
												_elm_lang$html$Html$text('Generate Speech')
											]))
									]))
							]))
					]))
			]));
};
var _moarwick$elm_webpack_starter$Main$subscriptions = function (model) {
	return _elm_lang$core$Platform_Sub$none;
};
var _moarwick$elm_webpack_starter$Main$decodeSpeech = A2(
	_elm_lang$core$Json_Decode$at,
	_elm_lang$core$Native_List.fromArray(
		['speech']),
	_elm_lang$core$Json_Decode$string);
var _moarwick$elm_webpack_starter$Main$appUrl = 'http://localhost:8888/api/speeches/';
var _moarwick$elm_webpack_starter$Main$Model = function (a) {
	return {speech: a};
};
var _moarwick$elm_webpack_starter$Main$FetchFail = function (a) {
	return {ctor: 'FetchFail', _0: a};
};
var _moarwick$elm_webpack_starter$Main$FetchSucceed = function (a) {
	return {ctor: 'FetchSucceed', _0: a};
};
var _moarwick$elm_webpack_starter$Main$getSpeech = A3(
	_elm_lang$core$Task$perform,
	_moarwick$elm_webpack_starter$Main$FetchFail,
	_moarwick$elm_webpack_starter$Main$FetchSucceed,
	A2(_evancz$elm_http$Http$get, _moarwick$elm_webpack_starter$Main$decodeSpeech, _moarwick$elm_webpack_starter$Main$appUrl));
var _moarwick$elm_webpack_starter$Main$init = function (speech) {
	return {
		ctor: '_Tuple2',
		_0: _moarwick$elm_webpack_starter$Main$Model(speech),
		_1: _moarwick$elm_webpack_starter$Main$getSpeech
	};
};
var _moarwick$elm_webpack_starter$Main$update = F2(
	function (msg, model) {
		var _p0 = msg;
		switch (_p0.ctor) {
			case 'NewSpeech':
				return {ctor: '_Tuple2', _0: model, _1: _moarwick$elm_webpack_starter$Main$getSpeech};
			case 'FetchSucceed':
				return {
					ctor: '_Tuple2',
					_0: _moarwick$elm_webpack_starter$Main$Model(_p0._0),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			default:
				return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
		}
	});
var _moarwick$elm_webpack_starter$Main$main = {
	main: _elm_lang$html$Html_App$program(
		{
			init: _moarwick$elm_webpack_starter$Main$init('Click the button to generate a speech'),
			view: _moarwick$elm_webpack_starter$Main$view,
			update: _moarwick$elm_webpack_starter$Main$update,
			subscriptions: _moarwick$elm_webpack_starter$Main$subscriptions
		})
};
var _moarwick$elm_webpack_starter$Main$NewSpeech = {ctor: 'NewSpeech'};
